<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.xsd
           http://www.springframework.org/schema/jee
           http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

<!-- 	<security:http auto-config="true">
		<security:intercept-url pattern="/css/**" filters="none"/>
    	<security:intercept-url pattern="/js/**" filters="none"/>
		<security:intercept-url pattern="/app/login/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<security:intercept-url pattern="/**" access="ROLE_USER"/>
		<security:form-login login-page="/app/login" default-target-url="/app/home"/>
		<security:logout logout-url="/app/logout" logout-success-url="/app/login/afterlogout"/>
	</security:http>-->

	<!-- This is the important part of the web configuration.  The rest is setup. -->

	<bean id="AppFilterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
	  <property name="authenticationManager" ref="authenticationManager"/>
	  <property name="accessDecisionManager" ref="accessDecisionManager"/>
	  <property name="securityMetadataSource">
	    <security:filter-security-metadata-source>
			<security:intercept-url pattern="/app/login/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
			<security:intercept-url pattern="/app/denied/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
			<security:intercept-url pattern="/**" access="ROLE_USER"/>
		</security:filter-security-metadata-source>
	  </property>
	</bean>	

	<bean id="ApiFilterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
	  <property name="authenticationManager" ref="authenticationManager"/>
	  <property name="accessDecisionManager" ref="accessDecisionManager"/>
	  <property name="securityMetadataSource">
	    <security:filter-security-metadata-source>
			<security:intercept-url pattern="/**" access="ROLE_API_USER,ROLE_ADMIN"/>
		</security:filter-security-metadata-source>
	  </property>
	</bean>	
	
	<alias name="filterChainProxy" alias="springSecurityFilterChain"/>
	<bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
		<security:filter-chain-map path-type="ant">
			<security:filter-chain  pattern="/app/**" filters="AppSecurityContextPersistenceFilter,
															   LoginPageAuthenticationFilter,
															   AnonymousAuthFilter,
															   RequestCacheAwareFilter,
															   SessionManagementFilter,
															   AppExceptionTranslationFilter,
															   AppFilterSecurityInterceptor"/>
			<security:filter-chain  pattern="/api/**" filters="ApiSecurityContextPersistenceFilter,
															   BasicAuthenticationFilter,
															   ApiExceptionTranslationFilter,
															   ApiFilterSecurityInterceptor"/>
		</security:filter-chain-map>
	</bean>

	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
	    <constructor-arg value="/app/login/afterlogout" />
	    <constructor-arg>
	        <list><bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" /></list>
	    </constructor-arg>
	    <property name="filterProcessesUrl" value="/app/logout"/>
	</bean>

	<bean id="RequestCacheAwareFilter" class="org.springframework.security.web.savedrequest.RequestCacheAwareFilter"/>

	<bean id="AnonymousAuthFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
	  <property name="key" value="anonKey"/>
	  <property name="userAttribute" value="anonymous,IS_AUTHENTICATED_ANONYMOUSLY"/>
	</bean>
	
	<bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
	  <property name="key" value="anonKey"/>
	</bean>
	
	<bean id="SessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
		<constructor-arg ref="AppSecurityContextRepo"/>
	</bean>

	<bean id="BasicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
	  <property name="authenticationManager" ref="authenticationManager"/>
	  <property name="authenticationEntryPoint" ref="basicAuthenticationEntryPoint"/>
	</bean>

	<bean id="LoginPageAuthenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
	  <property name="authenticationManager" ref="authenticationManager"/>
	  <property name="filterProcessesUrl" value="/app/j_spring_security_check"/>
	  <property name="authenticationSuccessHandler">
	  	<bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
	  		<property name="defaultTargetUrl" value="/app/home"/>
			<property name="alwaysUseDefaultTargetUrl" value="true"/>
	  	</bean>
	  </property>
	</bean> 

	<bean id="ApiSecurityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<property name='securityContextRepository'>
			<bean class='org.springframework.security.web.context.HttpSessionSecurityContextRepository'>
			  <property name='allowSessionCreation' value='false' />
			</bean>
		</property>
	</bean>

	<bean id="AppSecurityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<property name='securityContextRepository' ref="AppSecurityContextRepo"/>
	</bean>
	
	<bean id="AppSecurityContextRepo" class='org.springframework.security.web.context.HttpSessionSecurityContextRepository'/>
	
	<bean id="formAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
	  <property name="loginFormUrl" value="/app/login"/>
	</bean>

	<bean id="basicAuthenticationEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
	  <property name="realmName" value="CAT API"/>
	</bean>
	
	<bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl"/>
	
	<bean id="AppExceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
	  <property name="authenticationEntryPoint" ref="formAuthenticationEntryPoint"/>
	  <property name="accessDeniedHandler" ref="accessDeniedHandler"/>
	</bean>

	<bean id="ApiExceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
	  <property name="authenticationEntryPoint" ref="basicAuthenticationEntryPoint"/>
	  <property name="accessDeniedHandler" ref="accessDeniedHandler"/>
	</bean>
	
	<!-- End of web app security . . . starting on general security -->

    <bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="permissionEvaluator" ref="permissionEvaluator"/>
    </bean>

    <bean id="permissionEvaluator" class="org.springframework.security.acls.AclPermissionEvaluator">
        <constructor-arg ref="aclService"/>
    </bean>
    
	<security:global-method-security pre-post-annotations="enabled" access-decision-manager-ref="accessDecisionManager">
		<security:expression-handler ref="expressionHandler"/>
	</security:global-method-security>
	
	<jee:jndi-lookup id="cat2-ds" jndi-name="java:jdbc/campaignAdmin2DS"/>

	<bean id="cat-salt" class="com.digitalbarista.cat.util.CATSaltSource"/>

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="true"/>
	    <property name="decisionVoters">
	        <list>
	            <bean class="org.springframework.security.access.vote.RoleVoter"/>
	            <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
	        </list>
	    </property>
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:password-encoder hash="sha">
				<security:salt-source ref="cat-salt"/>
			</security:password-encoder>
			<security:jdbc-user-service data-source-ref="cat2-ds"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
  <bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
    <constructor-arg>
      <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
          <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
        </property>
        <property name="cacheName" value="aclCache"/>
      </bean>
    </constructor-arg>
  </bean>

  <bean id="lookupStrategy" class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
    <constructor-arg ref="cat2-ds"/>
    <constructor-arg ref="aclCache"/>
    <constructor-arg>
        <bean class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
            <constructor-arg>
            <list>
                <bean class="org.springframework.security.core.authority.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMINISTRATOR"/>
                </bean>
                <bean class="org.springframework.security.core.authority.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMINISTRATOR"/>
                </bean>
                <bean class="org.springframework.security.core.authority.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMINISTRATOR"/>
                </bean>
            </list>
            </constructor-arg>
        </bean>
    </constructor-arg>
    <constructor-arg>
      <bean class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
    </constructor-arg>
  </bean>

  <bean id="aclService" class="org.springframework.security.acls.jdbc.JdbcMutableAclService">
    <constructor-arg ref="cat2-ds"/>
    <constructor-arg ref="lookupStrategy"/>
    <constructor-arg ref="aclCache"/>
  </bean>
</beans>